Terminals unused in grammar

    HUNDRED
    POINT
    RELATION


Grammar

    0 $accept: line $end

    1 line: expr '\n'
    2     | assignment '\n'
    3     | insertation '\n'

    4 expr: NUM
    5     | UNIT
    6     | TEEN
    7     | TEN
    8     | expr PLUS expr
    9     | expr MINUS expr
   10     | expr TIMES expr
   11     | expr DIVIDE expr
   12     | expr FACT
   13     | MINUS expr
   14     | expr EXP expr
   15     | LPAREN expr RPAREN
   16     | WHILE LPAREN boolexpr RPAREN expr
   17     | IF LPAREN boolexpr RPAREN expr ELSE expr

   18 assignment: ID '=' expr

   19 insertation: INTEGER ID '=' expr
   20            | DOUBLE ID '=' expr
   21            | BOOLEAN ID '=' expr

   22 boolexpr: BOOLEAN


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 1 2 3
    '=' (61) 18 19 20 21
    error (256)
    UNIT <value> (258) 5
    TEEN <value> (259) 6
    TEN <value> (260) 7
    HUNDRED <value> (261)
    INTEGER <value> (262) 19
    DOUBLE <value> (263) 20
    NUM <value> (264) 4
    BOOLEAN <value> (265) 21 22
    POINT <op> (266)
    EXP <op> (267) 14
    FACT <op> (268) 12
    NEG <op> (269)
    PLUS <op> (270) 8
    MINUS <op> (271) 9 13
    TIMES <op> (272) 10
    DIVIDE <op> (273) 11
    LPAREN <op> (274) 15 16 17
    RPAREN <op> (275) 15 16 17
    RELATION <op> (276)
    IF (277) 17
    WHILE (278) 16
    ELSE (279) 17
    ID <value> (280) 18 19 20 21
    LOWEST (281)


Nonterminals, with rules where they appear

    $accept (29)
        on left: 0
    line <value> (30)
        on left: 1 2 3
        on right: 0
    expr <value> (31)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17
        on right: 1 8 9 10 11 12 13 14 15 16 17 18 19 20 21
    assignment <value> (32)
        on left: 18
        on right: 2
    insertation <value> (33)
        on left: 19 20 21
        on right: 3
    boolexpr <value> (34)
        on left: 22
        on right: 16 17


State 0

    0 $accept: • line $end

    UNIT     shift, and go to state 1
    TEEN     shift, and go to state 2
    TEN      shift, and go to state 3
    INTEGER  shift, and go to state 4
    DOUBLE   shift, and go to state 5
    NUM      shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    MINUS    shift, and go to state 8
    LPAREN   shift, and go to state 9
    IF       shift, and go to state 10
    WHILE    shift, and go to state 11
    ID       shift, and go to state 12

    line         go to state 13
    expr         go to state 14
    assignment   go to state 15
    insertation  go to state 16


State 1

    5 expr: UNIT •

    $default  reduce using rule 5 (expr)


State 2

    6 expr: TEEN •

    $default  reduce using rule 6 (expr)


State 3

    7 expr: TEN •

    $default  reduce using rule 7 (expr)


State 4

   19 insertation: INTEGER • ID '=' expr

    ID  shift, and go to state 17


State 5

   20 insertation: DOUBLE • ID '=' expr

    ID  shift, and go to state 18


State 6

    4 expr: NUM •

    $default  reduce using rule 4 (expr)


State 7

   21 insertation: BOOLEAN • ID '=' expr

    ID  shift, and go to state 19


State 8

   13 expr: MINUS • expr

    UNIT    shift, and go to state 1
    TEEN    shift, and go to state 2
    TEN     shift, and go to state 3
    NUM     shift, and go to state 6
    MINUS   shift, and go to state 8
    LPAREN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11

    expr  go to state 20


State 9

   15 expr: LPAREN • expr RPAREN

    UNIT    shift, and go to state 1
    TEEN    shift, and go to state 2
    TEN     shift, and go to state 3
    NUM     shift, and go to state 6
    MINUS   shift, and go to state 8
    LPAREN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11

    expr  go to state 21


State 10

   17 expr: IF • LPAREN boolexpr RPAREN expr ELSE expr

    LPAREN  shift, and go to state 22


State 11

   16 expr: WHILE • LPAREN boolexpr RPAREN expr

    LPAREN  shift, and go to state 23


State 12

   18 assignment: ID • '=' expr

    '='  shift, and go to state 24


State 13

    0 $accept: line • $end

    $end  shift, and go to state 25


State 14

    1 line: expr • '\n'
    8 expr: expr • PLUS expr
    9     | expr • MINUS expr
   10     | expr • TIMES expr
   11     | expr • DIVIDE expr
   12     | expr • FACT
   14     | expr • EXP expr

    EXP     shift, and go to state 26
    FACT    shift, and go to state 27
    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    '\n'    shift, and go to state 32


State 15

    2 line: assignment • '\n'

    '\n'  shift, and go to state 33


State 16

    3 line: insertation • '\n'

    '\n'  shift, and go to state 34


State 17

   19 insertation: INTEGER ID • '=' expr

    '='  shift, and go to state 35


State 18

   20 insertation: DOUBLE ID • '=' expr

    '='  shift, and go to state 36


State 19

   21 insertation: BOOLEAN ID • '=' expr

    '='  shift, and go to state 37


State 20

    8 expr: expr • PLUS expr
    9     | expr • MINUS expr
   10     | expr • TIMES expr
   11     | expr • DIVIDE expr
   12     | expr • FACT
   13     | MINUS expr •
   14     | expr • EXP expr

    EXP   shift, and go to state 26
    FACT  shift, and go to state 27

    $default  reduce using rule 13 (expr)


State 21

    8 expr: expr • PLUS expr
    9     | expr • MINUS expr
   10     | expr • TIMES expr
   11     | expr • DIVIDE expr
   12     | expr • FACT
   14     | expr • EXP expr
   15     | LPAREN expr • RPAREN

    EXP     shift, and go to state 26
    FACT    shift, and go to state 27
    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    RPAREN  shift, and go to state 38


State 22

   17 expr: IF LPAREN • boolexpr RPAREN expr ELSE expr

    BOOLEAN  shift, and go to state 39

    boolexpr  go to state 40


State 23

   16 expr: WHILE LPAREN • boolexpr RPAREN expr

    BOOLEAN  shift, and go to state 39

    boolexpr  go to state 41


State 24

   18 assignment: ID '=' • expr

    UNIT    shift, and go to state 1
    TEEN    shift, and go to state 2
    TEN     shift, and go to state 3
    NUM     shift, and go to state 6
    MINUS   shift, and go to state 8
    LPAREN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11

    expr  go to state 42


State 25

    0 $accept: line $end •

    $default  accept


State 26

   14 expr: expr EXP • expr

    UNIT    shift, and go to state 1
    TEEN    shift, and go to state 2
    TEN     shift, and go to state 3
    NUM     shift, and go to state 6
    MINUS   shift, and go to state 8
    LPAREN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11

    expr  go to state 43


State 27

   12 expr: expr FACT •

    $default  reduce using rule 12 (expr)


State 28

    8 expr: expr PLUS • expr

    UNIT    shift, and go to state 1
    TEEN    shift, and go to state 2
    TEN     shift, and go to state 3
    NUM     shift, and go to state 6
    MINUS   shift, and go to state 8
    LPAREN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11

    expr  go to state 44


State 29

    9 expr: expr MINUS • expr

    UNIT    shift, and go to state 1
    TEEN    shift, and go to state 2
    TEN     shift, and go to state 3
    NUM     shift, and go to state 6
    MINUS   shift, and go to state 8
    LPAREN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11

    expr  go to state 45


State 30

   10 expr: expr TIMES • expr

    UNIT    shift, and go to state 1
    TEEN    shift, and go to state 2
    TEN     shift, and go to state 3
    NUM     shift, and go to state 6
    MINUS   shift, and go to state 8
    LPAREN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11

    expr  go to state 46


State 31

   11 expr: expr DIVIDE • expr

    UNIT    shift, and go to state 1
    TEEN    shift, and go to state 2
    TEN     shift, and go to state 3
    NUM     shift, and go to state 6
    MINUS   shift, and go to state 8
    LPAREN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11

    expr  go to state 47


State 32

    1 line: expr '\n' •

    $default  reduce using rule 1 (line)


State 33

    2 line: assignment '\n' •

    $default  reduce using rule 2 (line)


State 34

    3 line: insertation '\n' •

    $default  reduce using rule 3 (line)


State 35

   19 insertation: INTEGER ID '=' • expr

    UNIT    shift, and go to state 1
    TEEN    shift, and go to state 2
    TEN     shift, and go to state 3
    NUM     shift, and go to state 6
    MINUS   shift, and go to state 8
    LPAREN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11

    expr  go to state 48


State 36

   20 insertation: DOUBLE ID '=' • expr

    UNIT    shift, and go to state 1
    TEEN    shift, and go to state 2
    TEN     shift, and go to state 3
    NUM     shift, and go to state 6
    MINUS   shift, and go to state 8
    LPAREN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11

    expr  go to state 49


State 37

   21 insertation: BOOLEAN ID '=' • expr

    UNIT    shift, and go to state 1
    TEEN    shift, and go to state 2
    TEN     shift, and go to state 3
    NUM     shift, and go to state 6
    MINUS   shift, and go to state 8
    LPAREN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11

    expr  go to state 50


State 38

   15 expr: LPAREN expr RPAREN •

    $default  reduce using rule 15 (expr)


State 39

   22 boolexpr: BOOLEAN •

    $default  reduce using rule 22 (boolexpr)


State 40

   17 expr: IF LPAREN boolexpr • RPAREN expr ELSE expr

    RPAREN  shift, and go to state 51


State 41

   16 expr: WHILE LPAREN boolexpr • RPAREN expr

    RPAREN  shift, and go to state 52


State 42

    8 expr: expr • PLUS expr
    9     | expr • MINUS expr
   10     | expr • TIMES expr
   11     | expr • DIVIDE expr
   12     | expr • FACT
   14     | expr • EXP expr
   18 assignment: ID '=' expr •

    EXP     shift, and go to state 26
    FACT    shift, and go to state 27
    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31

    $default  reduce using rule 18 (assignment)


State 43

    8 expr: expr • PLUS expr
    9     | expr • MINUS expr
   10     | expr • TIMES expr
   11     | expr • DIVIDE expr
   12     | expr • FACT
   14     | expr • EXP expr
   14     | expr EXP expr •

    EXP   shift, and go to state 26
    FACT  shift, and go to state 27

    $default  reduce using rule 14 (expr)


State 44

    8 expr: expr • PLUS expr
    8     | expr PLUS expr •
    9     | expr • MINUS expr
   10     | expr • TIMES expr
   11     | expr • DIVIDE expr
   12     | expr • FACT
   14     | expr • EXP expr

    EXP     shift, and go to state 26
    FACT    shift, and go to state 27
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31

    $default  reduce using rule 8 (expr)


State 45

    8 expr: expr • PLUS expr
    9     | expr • MINUS expr
    9     | expr MINUS expr •
   10     | expr • TIMES expr
   11     | expr • DIVIDE expr
   12     | expr • FACT
   14     | expr • EXP expr

    EXP     shift, and go to state 26
    FACT    shift, and go to state 27
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31

    $default  reduce using rule 9 (expr)


State 46

    8 expr: expr • PLUS expr
    9     | expr • MINUS expr
   10     | expr • TIMES expr
   10     | expr TIMES expr •
   11     | expr • DIVIDE expr
   12     | expr • FACT
   14     | expr • EXP expr

    EXP   shift, and go to state 26
    FACT  shift, and go to state 27

    $default  reduce using rule 10 (expr)


State 47

    8 expr: expr • PLUS expr
    9     | expr • MINUS expr
   10     | expr • TIMES expr
   11     | expr • DIVIDE expr
   11     | expr DIVIDE expr •
   12     | expr • FACT
   14     | expr • EXP expr

    EXP   shift, and go to state 26
    FACT  shift, and go to state 27

    $default  reduce using rule 11 (expr)


State 48

    8 expr: expr • PLUS expr
    9     | expr • MINUS expr
   10     | expr • TIMES expr
   11     | expr • DIVIDE expr
   12     | expr • FACT
   14     | expr • EXP expr
   19 insertation: INTEGER ID '=' expr •

    EXP     shift, and go to state 26
    FACT    shift, and go to state 27
    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31

    $default  reduce using rule 19 (insertation)


State 49

    8 expr: expr • PLUS expr
    9     | expr • MINUS expr
   10     | expr • TIMES expr
   11     | expr • DIVIDE expr
   12     | expr • FACT
   14     | expr • EXP expr
   20 insertation: DOUBLE ID '=' expr •

    EXP     shift, and go to state 26
    FACT    shift, and go to state 27
    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31

    $default  reduce using rule 20 (insertation)


State 50

    8 expr: expr • PLUS expr
    9     | expr • MINUS expr
   10     | expr • TIMES expr
   11     | expr • DIVIDE expr
   12     | expr • FACT
   14     | expr • EXP expr
   21 insertation: BOOLEAN ID '=' expr •

    EXP     shift, and go to state 26
    FACT    shift, and go to state 27
    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31

    $default  reduce using rule 21 (insertation)


State 51

   17 expr: IF LPAREN boolexpr RPAREN • expr ELSE expr

    UNIT    shift, and go to state 1
    TEEN    shift, and go to state 2
    TEN     shift, and go to state 3
    NUM     shift, and go to state 6
    MINUS   shift, and go to state 8
    LPAREN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11

    expr  go to state 53


State 52

   16 expr: WHILE LPAREN boolexpr RPAREN • expr

    UNIT    shift, and go to state 1
    TEEN    shift, and go to state 2
    TEN     shift, and go to state 3
    NUM     shift, and go to state 6
    MINUS   shift, and go to state 8
    LPAREN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11

    expr  go to state 54


State 53

    8 expr: expr • PLUS expr
    9     | expr • MINUS expr
   10     | expr • TIMES expr
   11     | expr • DIVIDE expr
   12     | expr • FACT
   14     | expr • EXP expr
   17     | IF LPAREN boolexpr RPAREN expr • ELSE expr

    EXP     shift, and go to state 26
    FACT    shift, and go to state 27
    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31
    ELSE    shift, and go to state 55


State 54

    8 expr: expr • PLUS expr
    9     | expr • MINUS expr
   10     | expr • TIMES expr
   11     | expr • DIVIDE expr
   12     | expr • FACT
   14     | expr • EXP expr
   16     | WHILE LPAREN boolexpr RPAREN expr •

    $default  reduce using rule 16 (expr)


State 55

   17 expr: IF LPAREN boolexpr RPAREN expr ELSE • expr

    UNIT    shift, and go to state 1
    TEEN    shift, and go to state 2
    TEN     shift, and go to state 3
    NUM     shift, and go to state 6
    MINUS   shift, and go to state 8
    LPAREN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11

    expr  go to state 56


State 56

    8 expr: expr • PLUS expr
    9     | expr • MINUS expr
   10     | expr • TIMES expr
   11     | expr • DIVIDE expr
   12     | expr • FACT
   14     | expr • EXP expr
   17     | IF LPAREN boolexpr RPAREN expr ELSE expr •

    $default  reduce using rule 17 (expr)
